name: Build and deploy (PROD)

on:
    push:
        branches: main

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    build_and_push:
        name: Build and push on registry
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Login to private Docker Registry
              uses: docker/login-action@v2
              with:
                  registry: registry.nassimlounadi.fr
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Build and push frontend
              uses: docker/build-push-action@v4
              with:
                  context: ./frontend/
                  file: ./frontend/Dockerfile
                  platforms: linux/amd64
                  push: true
                  tags: registry.nassimlounadi.fr/nassimlnd/matchroom-frontend:latest
                  target: prod

            - name: Build and push backend
              uses: docker/build-push-action@v4
              with:
                  context: ./backend/
                  file: ./backend/Dockerfile
                  platforms: linux/amd64
                  push: true
                  tags: registry.nassimlounadi.fr/nassimlnd/matchroom-backend:latest
                  target: prod

            - name: Build and push nginx
              uses: docker/build-push-action@v4
              with:
                  context: ./nginx/
                  file: ./nginx/Dockerfile
                  platforms: linux/amd64
                  push: true
                  tags: registry.nassimlounadi.fr/nassimlnd/matchroom-nginx:latest

    deploy:
        name: Deploy to VPS
        runs-on: ubuntu-latest
        needs: build_and_push
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup SSH Agent
              uses: webfactory/ssh-agent@v0.9.0
              with:
                  ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

            - name: Deploy to VPS
              env:
                  SSH_HOST: ${{ secrets.VPS_HOST }}
                  SSH_USER: ${{ secrets.VPS_USER }}
              run: |
                  echo "StrictHostKeyChecking no" >> ~/.ssh/config
                  scp docker-compose.prod.yml $SSH_USER@$SSH_HOST:~/www/MatchRoom/docker-compose.yml
                  ssh $SSH_USER@$SSH_HOST << 'EOF'
                    cd ~/www/MatchRoom/
                    # Mettre à jour les images
                    docker compose pull
                    # Redémarrer les conteneurs
                    docker compose up -d
                    # Nettoyer les images non utilisées
                    docker image prune -f
                  EOF
